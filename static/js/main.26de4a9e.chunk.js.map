{"version":3,"sources":["Example.js","Functional.js","Counter.js","Controlled.js","App.js","reportWebVitals.js","index.js"],"names":["ClassComponent","state","this","props","name","React","Component","Functional","Counter","counter","startingNumber","stateValue2","setState","onClick","updateCounter","Controlled","type","value","onChange","e","target","exampleCollection","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"qPAgBeA,E,4MAbXC,MAAQ,CAAC,SAAY,G,4CAErB,WACI,OACI,gCACI,+DACA,uDAA0BC,KAAKC,MAAMC,QACrC,gE,GARaC,IAAMC,WCSpBC,EATI,SAACJ,GAChB,OACI,gCACI,6BAAKA,EAAMC,OACX,4ECcGI,E,4MAjBXP,MAAQ,CAACQ,QAAS,EAAKN,MAAMO,eAAgBC,YAAa,G,mDAE1D,WACIT,KAAKU,SAAS,CAACH,QAASP,KAAKD,MAAMQ,QAAU,M,oBAGjD,WAAU,IAAD,OACL,OACI,gCACI,+CACA,6BAAKP,KAAKD,MAAMQ,UAChB,wBAAQI,QAAS,kBAAM,EAAKC,iBAA5B,sD,GAZMT,IAAMC,WCgBbS,E,4MAfXd,MAAQ,CAACG,KAAM,I,4CAEf,WAAU,IAAD,OACL,OACI,8BACI,uBACIY,KAAK,OACLC,MAAOf,KAAKD,MAAMG,KAClBc,SAAU,SAACC,GAAD,OAAO,EAAKP,SAAS,CAAER,KAAMe,EAAEC,OAAOH,iB,GAT3CZ,IAAMC,WCKzBe,EAAoB,CACxB,cAAC,EAAD,CAAwBjB,KAAK,4CAAT,KACpB,cAAC,EAAD,CAAwBA,KAAK,YAAT,KACpB,cAAC,EAAD,CAAwBA,KAAK,OAAT,KACpB,cAAC,EAAD,CAAwBA,KAAK,YAAT,MAyBPkB,MArBf,WACE,OACE,sBAAKC,UAAU,MAAf,UAEE,cAAC,EAAD,IAEA,cAAC,EAAD,CAASb,eAAgB,MACzB,cAAC,EAAD,IACA,cAAC,EAAD,IAGCW,EAED,cAAC,EAAD,CAAYjB,KAAK,QACjB,cAAC,EAAD,CAAYA,KAAK,aACjB,cAAC,EAAD,CAAYA,KAAK,YClBRoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.26de4a9e.chunk.js","sourcesContent":["import React from 'react'\n\nclass ClassComponent extends React.Component {\n    state = {\"myState1\": 0}\n\n    render() {\n        return (\n            <div>\n                <h2>hello from Example component!</h2>\n                <h4>enter your data here {this.props.name}</h4>\n                <button>click me to submit!</button>\n            </div>\n        )\n    }\n}\n\nexport default ClassComponent","import React from 'react'\n\nconst Functional = (props) => {\n    return (\n        <div>\n            <h3>{props.name}</h3>\n            <h5>w/e I want here will get reproduced...</h5>\n        </div>\n    )\n  }\n  \nexport default Functional","import React from 'react'\n\nclass Counter extends React.Component {\n    state = {counter: this.props.startingNumber, stateValue2: 0}\n\n    updateCounter() {\n        this.setState({counter: this.state.counter + 1})\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>I'm a counter</h2>\n                <h1>{this.state.counter}</h1>\n                <button onClick={() => this.updateCounter()}>Click me to increase the counter!</button>\n            </div>\n        )\n    }\n}\n\nexport default Counter","import React from 'react'\n\nclass Controlled extends React.Component {\n    state = {name: \"\"}\n\n    render() {\n        return (\n            <div>\n                <input\n                    type=\"text\"\n                    value={this.state.name}\n                    onChange={(e) => this.setState({ name: e.target.value })}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Controlled","import './App.css';\n\nimport ClassComponent from './Example'\nimport Functional from './Functional'\nimport Counter from './Counter'\nimport Controlled from './Controlled'\n\nconst exampleCollection = [\n  <ClassComponent key=\"1\" name=\"results of some API function/fetch combo\" />,\n  <ClassComponent key=\"2\" name=\"Meredith\" />,\n  <ClassComponent key=\"3\" name=\"Dan\" />,\n  <ClassComponent key=\"4\" name=\"Mitchell\" />\n]\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <Controlled />\n\n      <Counter startingNumber={100}></Counter>\n      <Counter></Counter>\n      <Counter></Counter>\n\n\n      {exampleCollection}\n\n      <Functional name=\"Jay\" />\n      <Functional name=\"Meredith\" />\n      <Functional name=\"Dan\" />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}